{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Detecção de cancer de mama com CNN","provenance":[],"authorship_tag":"ABX9TyNlVOFIw6zHH/1i3XxnyS7Y"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"TPU"},"cells":[{"cell_type":"code","execution_count":58,"metadata":{"id":"fPqnlY4UiCtX","executionInfo":{"status":"ok","timestamp":1646796278997,"user_tz":180,"elapsed":249,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}}},"outputs":[],"source":["import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Flatten, Dropout, BatchNormalization, Conv1D, MaxPool1D\n","from tensorflow.keras.optimizers import Adam\n","\n","import numpy as numpy\n","import seaborn as sns\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","from sklearn import metrics, datasets\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler"]},{"cell_type":"code","source":["print(tf.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZBKZ8DIQjrIw","executionInfo":{"status":"ok","timestamp":1646793947062,"user_tz":180,"elapsed":9,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"08fddd11-9177-4215-9b59-e2ad3c1b81a2"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["2.8.0\n"]}]},{"cell_type":"code","source":["cancer = datasets.load_breast_cancer()"],"metadata":{"id":"Zcd3RQP4j9QY","executionInfo":{"status":"ok","timestamp":1646794109754,"user_tz":180,"elapsed":288,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["print(cancer.DESCR)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aYDxfcjGk_B_","executionInfo":{"status":"ok","timestamp":1646794124738,"user_tz":180,"elapsed":233,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"a8f3b86d-e324-419e-cab6-a47c184618db"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":[".. _breast_cancer_dataset:\n","\n","Breast cancer wisconsin (diagnostic) dataset\n","--------------------------------------------\n","\n","**Data Set Characteristics:**\n","\n","    :Number of Instances: 569\n","\n","    :Number of Attributes: 30 numeric, predictive attributes and the class\n","\n","    :Attribute Information:\n","        - radius (mean of distances from center to points on the perimeter)\n","        - texture (standard deviation of gray-scale values)\n","        - perimeter\n","        - area\n","        - smoothness (local variation in radius lengths)\n","        - compactness (perimeter^2 / area - 1.0)\n","        - concavity (severity of concave portions of the contour)\n","        - concave points (number of concave portions of the contour)\n","        - symmetry\n","        - fractal dimension (\"coastline approximation\" - 1)\n","\n","        The mean, standard error, and \"worst\" or largest (mean of the three\n","        worst/largest values) of these features were computed for each image,\n","        resulting in 30 features.  For instance, field 0 is Mean Radius, field\n","        10 is Radius SE, field 20 is Worst Radius.\n","\n","        - class:\n","                - WDBC-Malignant\n","                - WDBC-Benign\n","\n","    :Summary Statistics:\n","\n","    ===================================== ====== ======\n","                                           Min    Max\n","    ===================================== ====== ======\n","    radius (mean):                        6.981  28.11\n","    texture (mean):                       9.71   39.28\n","    perimeter (mean):                     43.79  188.5\n","    area (mean):                          143.5  2501.0\n","    smoothness (mean):                    0.053  0.163\n","    compactness (mean):                   0.019  0.345\n","    concavity (mean):                     0.0    0.427\n","    concave points (mean):                0.0    0.201\n","    symmetry (mean):                      0.106  0.304\n","    fractal dimension (mean):             0.05   0.097\n","    radius (standard error):              0.112  2.873\n","    texture (standard error):             0.36   4.885\n","    perimeter (standard error):           0.757  21.98\n","    area (standard error):                6.802  542.2\n","    smoothness (standard error):          0.002  0.031\n","    compactness (standard error):         0.002  0.135\n","    concavity (standard error):           0.0    0.396\n","    concave points (standard error):      0.0    0.053\n","    symmetry (standard error):            0.008  0.079\n","    fractal dimension (standard error):   0.001  0.03\n","    radius (worst):                       7.93   36.04\n","    texture (worst):                      12.02  49.54\n","    perimeter (worst):                    50.41  251.2\n","    area (worst):                         185.2  4254.0\n","    smoothness (worst):                   0.071  0.223\n","    compactness (worst):                  0.027  1.058\n","    concavity (worst):                    0.0    1.252\n","    concave points (worst):               0.0    0.291\n","    symmetry (worst):                     0.156  0.664\n","    fractal dimension (worst):            0.055  0.208\n","    ===================================== ====== ======\n","\n","    :Missing Attribute Values: None\n","\n","    :Class Distribution: 212 - Malignant, 357 - Benign\n","\n","    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\n","\n","    :Donor: Nick Street\n","\n","    :Date: November, 1995\n","\n","This is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\n","https://goo.gl/U2Uwz2\n","\n","Features are computed from a digitized image of a fine needle\n","aspirate (FNA) of a breast mass.  They describe\n","characteristics of the cell nuclei present in the image.\n","\n","Separating plane described above was obtained using\n","Multisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\n","Construction Via Linear Programming.\" Proceedings of the 4th\n","Midwest Artificial Intelligence and Cognitive Science Society,\n","pp. 97-101, 1992], a classification method which uses linear\n","programming to construct a decision tree.  Relevant features\n","were selected using an exhaustive search in the space of 1-4\n","features and 1-3 separating planes.\n","\n","The actual linear program used to obtain the separating plane\n","in the 3-dimensional space is that described in:\n","[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\n","Programming Discrimination of Two Linearly Inseparable Sets\",\n","Optimization Methods and Software 1, 1992, 23-34].\n","\n","This database is also available through the UW CS ftp server:\n","\n","ftp ftp.cs.wisc.edu\n","cd math-prog/cpo-dataset/machine-learn/WDBC/\n","\n",".. topic:: References\n","\n","   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction \n","     for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on \n","     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\n","     San Jose, CA, 1993.\n","   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and \n","     prognosis via linear programming. Operations Research, 43(4), pages 570-577, \n","     July-August 1995.\n","   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\n","     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) \n","     163-171.\n"]}]},{"cell_type":"code","source":["df = pd.DataFrame(data= cancer.data,columns=cancer.feature_names)"],"metadata":{"id":"ywYUEcSwlCrO","executionInfo":{"status":"ok","timestamp":1646794474553,"user_tz":180,"elapsed":11,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":334},"id":"aZqDoGvemVbh","executionInfo":{"status":"ok","timestamp":1646795209659,"user_tz":180,"elapsed":279,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"b6d1e2b2-5de6-4a9e-d61f-76e833a22c5a"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-596fa5f8-5e0d-44b5-a6ef-21310a6768d6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean radius</th>\n","      <th>mean texture</th>\n","      <th>mean perimeter</th>\n","      <th>mean area</th>\n","      <th>mean smoothness</th>\n","      <th>mean compactness</th>\n","      <th>mean concavity</th>\n","      <th>mean concave points</th>\n","      <th>mean symmetry</th>\n","      <th>mean fractal dimension</th>\n","      <th>...</th>\n","      <th>worst radius</th>\n","      <th>worst texture</th>\n","      <th>worst perimeter</th>\n","      <th>worst area</th>\n","      <th>worst smoothness</th>\n","      <th>worst compactness</th>\n","      <th>worst concavity</th>\n","      <th>worst concave points</th>\n","      <th>worst symmetry</th>\n","      <th>worst fractal dimension</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.3001</td>\n","      <td>0.14710</td>\n","      <td>0.2419</td>\n","      <td>0.07871</td>\n","      <td>...</td>\n","      <td>25.38</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.0869</td>\n","      <td>0.07017</td>\n","      <td>0.1812</td>\n","      <td>0.05667</td>\n","      <td>...</td>\n","      <td>24.99</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.1238</td>\n","      <td>0.1866</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.1974</td>\n","      <td>0.12790</td>\n","      <td>0.2069</td>\n","      <td>0.05999</td>\n","      <td>...</td>\n","      <td>23.57</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.1444</td>\n","      <td>0.4245</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.2414</td>\n","      <td>0.10520</td>\n","      <td>0.2597</td>\n","      <td>0.09744</td>\n","      <td>...</td>\n","      <td>14.91</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.2098</td>\n","      <td>0.8663</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.1980</td>\n","      <td>0.10430</td>\n","      <td>0.1809</td>\n","      <td>0.05883</td>\n","      <td>...</td>\n","      <td>22.54</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.1374</td>\n","      <td>0.2050</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 30 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-596fa5f8-5e0d-44b5-a6ef-21310a6768d6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-596fa5f8-5e0d-44b5-a6ef-21310a6768d6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-596fa5f8-5e0d-44b5-a6ef-21310a6768d6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n","0        17.99         10.38          122.80     1001.0          0.11840   \n","1        20.57         17.77          132.90     1326.0          0.08474   \n","2        19.69         21.25          130.00     1203.0          0.10960   \n","3        11.42         20.38           77.58      386.1          0.14250   \n","4        20.29         14.34          135.10     1297.0          0.10030   \n","\n","   mean compactness  mean concavity  mean concave points  mean symmetry  \\\n","0           0.27760          0.3001              0.14710         0.2419   \n","1           0.07864          0.0869              0.07017         0.1812   \n","2           0.15990          0.1974              0.12790         0.2069   \n","3           0.28390          0.2414              0.10520         0.2597   \n","4           0.13280          0.1980              0.10430         0.1809   \n","\n","   mean fractal dimension  ...  worst radius  worst texture  worst perimeter  \\\n","0                 0.07871  ...         25.38          17.33           184.60   \n","1                 0.05667  ...         24.99          23.41           158.80   \n","2                 0.05999  ...         23.57          25.53           152.50   \n","3                 0.09744  ...         14.91          26.50            98.87   \n","4                 0.05883  ...         22.54          16.67           152.20   \n","\n","   worst area  worst smoothness  worst compactness  worst concavity  \\\n","0      2019.0            0.1622             0.6656           0.7119   \n","1      1956.0            0.1238             0.1866           0.2416   \n","2      1709.0            0.1444             0.4245           0.4504   \n","3       567.7            0.2098             0.8663           0.6869   \n","4      1575.0            0.1374             0.2050           0.4000   \n","\n","   worst concave points  worst symmetry  worst fractal dimension  \n","0                0.2654          0.4601                  0.11890  \n","1                0.1860          0.2750                  0.08902  \n","2                0.2430          0.3613                  0.08758  \n","3                0.2575          0.6638                  0.17300  \n","4                0.1625          0.2364                  0.07678  \n","\n","[5 rows x 30 columns]"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r3hLrKJlnCaB","executionInfo":{"status":"ok","timestamp":1646794654238,"user_tz":180,"elapsed":235,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"058af009-1450-410e-fe95-9eaae4a1b9ec"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['mean radius', 'mean texture', 'mean perimeter', 'mean area',\n","       'mean smoothness', 'mean compactness', 'mean concavity',\n","       'mean concave points', 'mean symmetry', 'mean fractal dimension',\n","       'radius error', 'texture error', 'perimeter error', 'area error',\n","       'smoothness error', 'compactness error', 'concavity error',\n","       'concave points error', 'symmetry error', 'fractal dimension error',\n","       'worst radius', 'worst texture', 'worst perimeter', 'worst area',\n","       'worst smoothness', 'worst compactness', 'worst concavity',\n","       'worst concave points', 'worst symmetry', 'worst fractal dimension'],\n","      dtype='object')"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["target = cancer.target"],"metadata":{"id":"EF90CtNWmZc7","executionInfo":{"status":"ok","timestamp":1646794549236,"user_tz":180,"elapsed":316,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["X_train,X_test,y_train,y_test = train_test_split(df,target,test_size=.2,stratify=target)"],"metadata":{"id":"hB5AornAmqMc","executionInfo":{"status":"ok","timestamp":1646795171448,"user_tz":180,"elapsed":240,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["X_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sqj0lTubnrga","executionInfo":{"status":"ok","timestamp":1646796155775,"user_tz":180,"elapsed":258,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"47b052cc-3b80-41f8-8b31-8726b7629b61"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(455, 30, 1)"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jFnPoZAUn7bT","executionInfo":{"status":"ok","timestamp":1646796158037,"user_tz":180,"elapsed":299,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"daccb17b-0881-4b6e-a18e-a1a315c7d5c8"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(114, 30, 1)"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["ss = StandardScaler()\n","X_train = ss.fit_transform(X_train)\n","X_test = ss.transform(X_test)"],"metadata":{"id":"SFTI8dGeogDa","executionInfo":{"status":"ok","timestamp":1646795173568,"user_tz":180,"elapsed":3,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["X_train[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N7n9SSVFo_rT","executionInfo":{"status":"ok","timestamp":1646796166357,"user_tz":180,"elapsed":247,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"01046896-f4bd-4a82-b5f6-eac1c2427853"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1.57122697],\n","       [-1.46416165],\n","       [-1.53742716],\n","       [-1.23696903],\n","       [ 0.53017457],\n","       [-0.54389795],\n","       [-0.79526239],\n","       [-0.87383763],\n","       [-0.4821233 ],\n","       [ 1.14052167],\n","       [-0.97147184],\n","       [-0.97458096],\n","       [-0.85884947],\n","       [-0.70147566],\n","       [ 0.27928847],\n","       [-0.45534051],\n","       [-0.45413896],\n","       [-0.71439363],\n","       [-0.55078447],\n","       [ 0.02191133],\n","       [-1.39489112],\n","       [-1.17728592],\n","       [-1.30056055],\n","       [-1.05940216],\n","       [ 1.37700761],\n","       [-0.21068735],\n","       [-0.46939968],\n","       [-0.44720076],\n","       [ 0.1350077 ],\n","       [ 1.14766385]])"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["X_train = X_train.reshape(455,30,1)\n","X_test = X_test.reshape(114,30,1)"],"metadata":{"id":"gx6r3b88nV7C","executionInfo":{"status":"ok","timestamp":1646795214109,"user_tz":180,"elapsed":245,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["print(X_test[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GtzKnMd8nxo9","executionInfo":{"status":"ok","timestamp":1646796172801,"user_tz":180,"elapsed":252,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"69d8b19f-a17f-4f7f-bf82-f4ab80554f8f"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 2.88274433]\n"," [ 0.20106423]\n"," [ 3.06509216]\n"," [ 3.17525721]\n"," [ 3.43403355]\n"," [ 3.40490973]\n"," [ 4.25009004]\n"," [ 3.99217765]\n"," [ 3.06247651]\n"," [ 0.79912273]\n"," [ 3.82058339]\n"," [ 3.52106432]\n"," [ 3.26017718]\n"," [ 4.02912117]\n"," [ 5.33796472]\n"," [ 3.84818849]\n"," [ 2.95057035]\n"," [ 1.0042499 ]\n"," [ 2.9597139 ]\n"," [ 2.12002843]\n"," [ 2.00970533]\n"," [-0.2793756 ]\n"," [ 2.1821249 ]\n"," [ 2.09206098]\n"," [ 1.6142328 ]\n"," [ 1.0643001 ]\n"," [ 1.44415442]\n"," [ 1.67895785]\n"," [ 0.52604278]\n"," [-0.22129974]]\n"]}]},{"cell_type":"code","source":["epochs = 50\n","model = Sequential(name='cancer_cnn')\n","model.add(Conv1D(filters=32,kernel_size=2,activation='relu',input_shape=(30,1)))\n","model.add(BatchNormalization())\n","model.add(Dropout(.2))\n","\n","model.add(Conv1D(filters=32,kernel_size=2,activation='relu'))\n","model.add(BatchNormalization())\n","model.add(Dropout(.5))\n","\n","\n","model.add(Flatten())\n","model.add(Dense(64,activation='relu'))\n","model.add(Dropout(.5))\n","\n","\n","model.add(Dense(1,activation='sigmoid'))\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V0Wk-4mPpNnz","executionInfo":{"status":"ok","timestamp":1646796057840,"user_tz":180,"elapsed":630,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"75a5ca5c-8aab-4f93-aa8c-9083cbf13534"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"cancer_cnn\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv1d_11 (Conv1D)          (None, 29, 32)            96        \n","                                                                 \n"," batch_normalization_11 (Bat  (None, 29, 32)           128       \n"," chNormalization)                                                \n","                                                                 \n"," dropout_15 (Dropout)        (None, 29, 32)            0         \n","                                                                 \n"," conv1d_12 (Conv1D)          (None, 28, 32)            2080      \n","                                                                 \n"," batch_normalization_12 (Bat  (None, 28, 32)           128       \n"," chNormalization)                                                \n","                                                                 \n"," dropout_16 (Dropout)        (None, 28, 32)            0         \n","                                                                 \n"," flatten_5 (Flatten)         (None, 896)               0         \n","                                                                 \n"," dense_10 (Dense)            (None, 64)                57408     \n","                                                                 \n"," dropout_17 (Dropout)        (None, 64)                0         \n","                                                                 \n"," dense_11 (Dense)            (None, 1)                 65        \n","                                                                 \n","=================================================================\n","Total params: 59,905\n","Trainable params: 59,777\n","Non-trainable params: 128\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(optimizer=Adam(lr=.00005),loss='binary_crossentropy',metrics=['accuracy'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dM-CiHOTqv0O","executionInfo":{"status":"ok","timestamp":1646796060443,"user_tz":180,"elapsed":279,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"52c1109a-9feb-4eaf-f1b0-0042967d1a35"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  super(Adam, self).__init__(name, **kwargs)\n"]}]},{"cell_type":"code","source":["hist = model.fit(X_train,y_train,epochs=epochs,validation_data=(X_test,y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7WflVkffrlnx","executionInfo":{"status":"ok","timestamp":1646796073723,"user_tz":180,"elapsed":12242,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"1d4d3ca6-2b04-44aa-fdc6-a91bc45b934d"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","15/15 [==============================] - 2s 26ms/step - loss: 0.9305 - accuracy: 0.5780 - val_loss: 0.6747 - val_accuracy: 0.7456\n","Epoch 2/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.7750 - accuracy: 0.6593 - val_loss: 0.6496 - val_accuracy: 0.8421\n","Epoch 3/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.6725 - accuracy: 0.7143 - val_loss: 0.6199 - val_accuracy: 0.9035\n","Epoch 4/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.5777 - accuracy: 0.7451 - val_loss: 0.5858 - val_accuracy: 0.9561\n","Epoch 5/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.4745 - accuracy: 0.8044 - val_loss: 0.5506 - val_accuracy: 0.9825\n","Epoch 6/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.5097 - accuracy: 0.7868 - val_loss: 0.5121 - val_accuracy: 0.9912\n","Epoch 7/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.4478 - accuracy: 0.8022 - val_loss: 0.4719 - val_accuracy: 0.9561\n","Epoch 8/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.4109 - accuracy: 0.8374 - val_loss: 0.4376 - val_accuracy: 0.9561\n","Epoch 9/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.3568 - accuracy: 0.8747 - val_loss: 0.4058 - val_accuracy: 0.9561\n","Epoch 10/50\n","15/15 [==============================] - 0s 11ms/step - loss: 0.3836 - accuracy: 0.8527 - val_loss: 0.3754 - val_accuracy: 0.9474\n","Epoch 11/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.3474 - accuracy: 0.8527 - val_loss: 0.3441 - val_accuracy: 0.9474\n","Epoch 12/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.3816 - accuracy: 0.8505 - val_loss: 0.3142 - val_accuracy: 0.9561\n","Epoch 13/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.3818 - accuracy: 0.8659 - val_loss: 0.2856 - val_accuracy: 0.9561\n","Epoch 14/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.2725 - accuracy: 0.8857 - val_loss: 0.2607 - val_accuracy: 0.9737\n","Epoch 15/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.3011 - accuracy: 0.8923 - val_loss: 0.2368 - val_accuracy: 0.9737\n","Epoch 16/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.2854 - accuracy: 0.8945 - val_loss: 0.2160 - val_accuracy: 0.9825\n","Epoch 17/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.3470 - accuracy: 0.8549 - val_loss: 0.1967 - val_accuracy: 0.9912\n","Epoch 18/50\n","15/15 [==============================] - 0s 8ms/step - loss: 0.2609 - accuracy: 0.8945 - val_loss: 0.1794 - val_accuracy: 1.0000\n","Epoch 19/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2830 - accuracy: 0.8835 - val_loss: 0.1647 - val_accuracy: 1.0000\n","Epoch 20/50\n","15/15 [==============================] - 0s 11ms/step - loss: 0.2586 - accuracy: 0.8813 - val_loss: 0.1509 - val_accuracy: 1.0000\n","Epoch 21/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.2799 - accuracy: 0.8901 - val_loss: 0.1386 - val_accuracy: 1.0000\n","Epoch 22/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2492 - accuracy: 0.9099 - val_loss: 0.1279 - val_accuracy: 1.0000\n","Epoch 23/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.2614 - accuracy: 0.9033 - val_loss: 0.1187 - val_accuracy: 1.0000\n","Epoch 24/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.2334 - accuracy: 0.9187 - val_loss: 0.1108 - val_accuracy: 1.0000\n","Epoch 25/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2287 - accuracy: 0.9077 - val_loss: 0.1034 - val_accuracy: 1.0000\n","Epoch 26/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2123 - accuracy: 0.9209 - val_loss: 0.0966 - val_accuracy: 1.0000\n","Epoch 27/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2535 - accuracy: 0.8989 - val_loss: 0.0907 - val_accuracy: 1.0000\n","Epoch 28/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2201 - accuracy: 0.9165 - val_loss: 0.0854 - val_accuracy: 1.0000\n","Epoch 29/50\n","15/15 [==============================] - 0s 8ms/step - loss: 0.2280 - accuracy: 0.9033 - val_loss: 0.0810 - val_accuracy: 1.0000\n","Epoch 30/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.2260 - accuracy: 0.9143 - val_loss: 0.0770 - val_accuracy: 1.0000\n","Epoch 31/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1632 - accuracy: 0.9319 - val_loss: 0.0731 - val_accuracy: 1.0000\n","Epoch 32/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1929 - accuracy: 0.9231 - val_loss: 0.0697 - val_accuracy: 1.0000\n","Epoch 33/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2369 - accuracy: 0.9231 - val_loss: 0.0673 - val_accuracy: 1.0000\n","Epoch 34/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2347 - accuracy: 0.9033 - val_loss: 0.0648 - val_accuracy: 1.0000\n","Epoch 35/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1717 - accuracy: 0.9385 - val_loss: 0.0631 - val_accuracy: 1.0000\n","Epoch 36/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1780 - accuracy: 0.9341 - val_loss: 0.0607 - val_accuracy: 1.0000\n","Epoch 37/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.1655 - accuracy: 0.9429 - val_loss: 0.0586 - val_accuracy: 1.0000\n","Epoch 38/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1559 - accuracy: 0.9385 - val_loss: 0.0571 - val_accuracy: 1.0000\n","Epoch 39/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1774 - accuracy: 0.9341 - val_loss: 0.0554 - val_accuracy: 1.0000\n","Epoch 40/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1994 - accuracy: 0.9143 - val_loss: 0.0535 - val_accuracy: 1.0000\n","Epoch 41/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1926 - accuracy: 0.9385 - val_loss: 0.0523 - val_accuracy: 1.0000\n","Epoch 42/50\n","15/15 [==============================] - 0s 8ms/step - loss: 0.1434 - accuracy: 0.9495 - val_loss: 0.0514 - val_accuracy: 1.0000\n","Epoch 43/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.1475 - accuracy: 0.9538 - val_loss: 0.0508 - val_accuracy: 1.0000\n","Epoch 44/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1798 - accuracy: 0.9341 - val_loss: 0.0504 - val_accuracy: 1.0000\n","Epoch 45/50\n","15/15 [==============================] - 0s 8ms/step - loss: 0.1877 - accuracy: 0.9275 - val_loss: 0.0491 - val_accuracy: 1.0000\n","Epoch 46/50\n","15/15 [==============================] - 0s 8ms/step - loss: 0.1443 - accuracy: 0.9604 - val_loss: 0.0479 - val_accuracy: 1.0000\n","Epoch 47/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1529 - accuracy: 0.9407 - val_loss: 0.0466 - val_accuracy: 1.0000\n","Epoch 48/50\n","15/15 [==============================] - 0s 8ms/step - loss: 0.1834 - accuracy: 0.9297 - val_loss: 0.0450 - val_accuracy: 1.0000\n","Epoch 49/50\n","15/15 [==============================] - 0s 10ms/step - loss: 0.1624 - accuracy: 0.9319 - val_loss: 0.0444 - val_accuracy: 1.0000\n","Epoch 50/50\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1685 - accuracy: 0.9385 - val_loss: 0.0435 - val_accuracy: 1.0000\n"]}]},{"cell_type":"code","source":["def plot_learing(hist, epochs):\n","  epoch_range = range(1,epochs+1)\n","  plt.plot(epoch_range,hist.history['accuracy'])\n","  plt.plot(epoch_range,hist.history['val_accuracy'])\n","  plt.title(\"Precisão\")\n","  plt.ylabel('precisão')\n","  plt.xlabel('epoch')\n","  plt.legend(['treino','val'], loc ='upper left')\n","  plt.show()\n","\n","  plt.plot(epoch_range,hist.history['loss'])\n","  plt.plot(epoch_range,hist.history['val_loss'])\n","  plt.title(\"Erro\")\n","  plt.ylabel('erro')\n","  plt.xlabel('epoch')\n","  plt.legend(['treino','val'], loc ='upper left')\n","  plt.show()"],"metadata":{"id":"CzdD0TMGsVgB","executionInfo":{"status":"ok","timestamp":1646796285868,"user_tz":180,"elapsed":228,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["plot_learing(hist,epochs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"KkhtqoYatSRv","executionInfo":{"status":"ok","timestamp":1646796356290,"user_tz":180,"elapsed":1184,"user":{"displayName":"Marcelo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUmBLzXCWLJ94KBi4qMvQJQwv4xJjH-Q79iAdCJA=s64","userId":"16821328343641820731"}},"outputId":"ad4fd2d7-d076-4540-9d40-0a2e9ba1611c"},"execution_count":60,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[""],"metadata":{"id":"tRT1EU38tjPp"},"execution_count":null,"outputs":[]}]}