{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Predição de ações do Google usando RNN - LSTM","provenance":[],"authorship_tag":"ABX9TyOx+5Iy7ssc64G0v3H9GR0J"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler"],"metadata":{"id":"wHnRN2Oki-u8","executionInfo":{"status":"ok","timestamp":1649041864551,"user_tz":180,"elapsed":647,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["# Pré-processamento dos dados"],"metadata":{"id":"VskR4hD9jSVk"}},{"cell_type":"code","source":["df = pd.read_csv('/content/GOOG.csv',date_parser = True)"],"metadata":{"id":"7De_kdppjWAH","executionInfo":{"status":"ok","timestamp":1649041904441,"user_tz":180,"elapsed":226,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"kDw7u4jpjpAL","executionInfo":{"status":"ok","timestamp":1649041929738,"user_tz":180,"elapsed":251,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"a48f1c39-0ce1-405a-c07a-71b4fbc9917a"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date         Open         High          Low        Close  \\\n","4433  2022-03-29  2863.209961  2883.250000  2849.679932  2865.000000   \n","4434  2022-03-30  2857.399902  2869.610107  2843.360107  2852.889893   \n","4435  2022-03-31  2848.969971  2852.889893  2792.379883  2792.989990   \n","4436  2022-04-01  2800.199951  2819.000000  2775.939941  2814.000000   \n","4437  2022-04-01  2800.199951  2818.375000  2775.939941  2814.000000   \n","\n","        Adj Close   Volume  \n","4433  2865.000000  1433900  \n","4434  2852.889893  1052300  \n","4435  2792.989990  1475800  \n","4436  2814.000000  1173600  \n","4437  2814.000000  1174001  "],"text/html":["\n","  <div id=\"df-be05b732-f69a-426e-a36f-328a7b359c73\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4433</th>\n","      <td>2022-03-29</td>\n","      <td>2863.209961</td>\n","      <td>2883.250000</td>\n","      <td>2849.679932</td>\n","      <td>2865.000000</td>\n","      <td>2865.000000</td>\n","      <td>1433900</td>\n","    </tr>\n","    <tr>\n","      <th>4434</th>\n","      <td>2022-03-30</td>\n","      <td>2857.399902</td>\n","      <td>2869.610107</td>\n","      <td>2843.360107</td>\n","      <td>2852.889893</td>\n","      <td>2852.889893</td>\n","      <td>1052300</td>\n","    </tr>\n","    <tr>\n","      <th>4435</th>\n","      <td>2022-03-31</td>\n","      <td>2848.969971</td>\n","      <td>2852.889893</td>\n","      <td>2792.379883</td>\n","      <td>2792.989990</td>\n","      <td>2792.989990</td>\n","      <td>1475800</td>\n","    </tr>\n","    <tr>\n","      <th>4436</th>\n","      <td>2022-04-01</td>\n","      <td>2800.199951</td>\n","      <td>2819.000000</td>\n","      <td>2775.939941</td>\n","      <td>2814.000000</td>\n","      <td>2814.000000</td>\n","      <td>1173600</td>\n","    </tr>\n","    <tr>\n","      <th>4437</th>\n","      <td>2022-04-01</td>\n","      <td>2800.199951</td>\n","      <td>2818.375000</td>\n","      <td>2775.939941</td>\n","      <td>2814.000000</td>\n","      <td>2814.000000</td>\n","      <td>1174001</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be05b732-f69a-426e-a36f-328a7b359c73')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-be05b732-f69a-426e-a36f-328a7b359c73 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-be05b732-f69a-426e-a36f-328a7b359c73');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df_treino = df[df['Date']<'2019-01-01'].copy()\n"],"metadata":{"id":"222OaAqNjqHl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_treino.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"jQTrgCiukLIh","executionInfo":{"status":"ok","timestamp":1649042085528,"user_tz":180,"elapsed":270,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"bbb68ffe-29b7-4eda-a07b-324c6fb8f11f"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date         Open         High          Low        Close  \\\n","3612  2018-12-24   973.900024  1003.539978   970.109985   976.219971   \n","3613  2018-12-26   989.010010  1040.000000   983.000000  1039.459961   \n","3614  2018-12-27  1017.150024  1043.890015   997.000000  1043.880005   \n","3615  2018-12-28  1049.619995  1055.560059  1033.099976  1037.079956   \n","3616  2018-12-31  1050.959961  1052.699951  1023.590027  1035.609985   \n","\n","        Adj Close   Volume  \n","3612   976.219971  1590300  \n","3613  1039.459961  2373300  \n","3614  1043.880005  2109800  \n","3615  1037.079956  1414800  \n","3616  1035.609985  1493300  "],"text/html":["\n","  <div id=\"df-43800c65-7729-4a20-9be9-a22f86d89368\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3612</th>\n","      <td>2018-12-24</td>\n","      <td>973.900024</td>\n","      <td>1003.539978</td>\n","      <td>970.109985</td>\n","      <td>976.219971</td>\n","      <td>976.219971</td>\n","      <td>1590300</td>\n","    </tr>\n","    <tr>\n","      <th>3613</th>\n","      <td>2018-12-26</td>\n","      <td>989.010010</td>\n","      <td>1040.000000</td>\n","      <td>983.000000</td>\n","      <td>1039.459961</td>\n","      <td>1039.459961</td>\n","      <td>2373300</td>\n","    </tr>\n","    <tr>\n","      <th>3614</th>\n","      <td>2018-12-27</td>\n","      <td>1017.150024</td>\n","      <td>1043.890015</td>\n","      <td>997.000000</td>\n","      <td>1043.880005</td>\n","      <td>1043.880005</td>\n","      <td>2109800</td>\n","    </tr>\n","    <tr>\n","      <th>3615</th>\n","      <td>2018-12-28</td>\n","      <td>1049.619995</td>\n","      <td>1055.560059</td>\n","      <td>1033.099976</td>\n","      <td>1037.079956</td>\n","      <td>1037.079956</td>\n","      <td>1414800</td>\n","    </tr>\n","    <tr>\n","      <th>3616</th>\n","      <td>2018-12-31</td>\n","      <td>1050.959961</td>\n","      <td>1052.699951</td>\n","      <td>1023.590027</td>\n","      <td>1035.609985</td>\n","      <td>1035.609985</td>\n","      <td>1493300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43800c65-7729-4a20-9be9-a22f86d89368')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-43800c65-7729-4a20-9be9-a22f86d89368 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-43800c65-7729-4a20-9be9-a22f86d89368');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df_teste = df[df['Date']>='2019-01-01'].copy()"],"metadata":{"id":"wDZGHVFkkSvp","executionInfo":{"status":"ok","timestamp":1649042141029,"user_tz":180,"elapsed":10,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df_teste.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"aT2SxjtEkeB0","executionInfo":{"status":"ok","timestamp":1649042147228,"user_tz":180,"elapsed":278,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"0e9d47ad-af03-4a5f-8156-575f393d467f"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date         Open         High          Low        Close  \\\n","4433  2022-03-29  2863.209961  2883.250000  2849.679932  2865.000000   \n","4434  2022-03-30  2857.399902  2869.610107  2843.360107  2852.889893   \n","4435  2022-03-31  2848.969971  2852.889893  2792.379883  2792.989990   \n","4436  2022-04-01  2800.199951  2819.000000  2775.939941  2814.000000   \n","4437  2022-04-01  2800.199951  2818.375000  2775.939941  2814.000000   \n","\n","        Adj Close   Volume  \n","4433  2865.000000  1433900  \n","4434  2852.889893  1052300  \n","4435  2792.989990  1475800  \n","4436  2814.000000  1173600  \n","4437  2814.000000  1174001  "],"text/html":["\n","  <div id=\"df-494e9cf8-60cd-40ad-a959-9a6cd4ecef1a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4433</th>\n","      <td>2022-03-29</td>\n","      <td>2863.209961</td>\n","      <td>2883.250000</td>\n","      <td>2849.679932</td>\n","      <td>2865.000000</td>\n","      <td>2865.000000</td>\n","      <td>1433900</td>\n","    </tr>\n","    <tr>\n","      <th>4434</th>\n","      <td>2022-03-30</td>\n","      <td>2857.399902</td>\n","      <td>2869.610107</td>\n","      <td>2843.360107</td>\n","      <td>2852.889893</td>\n","      <td>2852.889893</td>\n","      <td>1052300</td>\n","    </tr>\n","    <tr>\n","      <th>4435</th>\n","      <td>2022-03-31</td>\n","      <td>2848.969971</td>\n","      <td>2852.889893</td>\n","      <td>2792.379883</td>\n","      <td>2792.989990</td>\n","      <td>2792.989990</td>\n","      <td>1475800</td>\n","    </tr>\n","    <tr>\n","      <th>4436</th>\n","      <td>2022-04-01</td>\n","      <td>2800.199951</td>\n","      <td>2819.000000</td>\n","      <td>2775.939941</td>\n","      <td>2814.000000</td>\n","      <td>2814.000000</td>\n","      <td>1173600</td>\n","    </tr>\n","    <tr>\n","      <th>4437</th>\n","      <td>2022-04-01</td>\n","      <td>2800.199951</td>\n","      <td>2818.375000</td>\n","      <td>2775.939941</td>\n","      <td>2814.000000</td>\n","      <td>2814.000000</td>\n","      <td>1174001</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-494e9cf8-60cd-40ad-a959-9a6cd4ecef1a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-494e9cf8-60cd-40ad-a959-9a6cd4ecef1a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-494e9cf8-60cd-40ad-a959-9a6cd4ecef1a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["treino = df_treino.drop(['Date','Adj Close'], axis = 1)\n","treino.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"a8RmWcD8kkLP","executionInfo":{"status":"ok","timestamp":1649042234044,"user_tz":180,"elapsed":13,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"14ba2590-64de-4947-8c7a-5094bad819fd"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Open       High        Low      Close    Volume\n","0  49.813290  51.835709  47.800831  49.982655  44871361\n","1  50.316402  54.336334  50.062355  53.952770  22942874\n","2  55.168217  56.528118  54.321388  54.495735  18342897\n","3  55.412300  55.591629  51.591621  52.239197  15319808\n","4  52.284027  53.798351  51.746044  52.802086   9232276"],"text/html":["\n","  <div id=\"df-de165c50-d834-4d96-88ca-291a5b88a632\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>49.813290</td>\n","      <td>51.835709</td>\n","      <td>47.800831</td>\n","      <td>49.982655</td>\n","      <td>44871361</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50.316402</td>\n","      <td>54.336334</td>\n","      <td>50.062355</td>\n","      <td>53.952770</td>\n","      <td>22942874</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>55.168217</td>\n","      <td>56.528118</td>\n","      <td>54.321388</td>\n","      <td>54.495735</td>\n","      <td>18342897</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>55.412300</td>\n","      <td>55.591629</td>\n","      <td>51.591621</td>\n","      <td>52.239197</td>\n","      <td>15319808</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>52.284027</td>\n","      <td>53.798351</td>\n","      <td>51.746044</td>\n","      <td>52.802086</td>\n","      <td>9232276</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de165c50-d834-4d96-88ca-291a5b88a632')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-de165c50-d834-4d96-88ca-291a5b88a632 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-de165c50-d834-4d96-88ca-291a5b88a632');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#Colocar os números entre 0 e 1 para que não haja problema durante o treino\n","scaler = MinMaxScaler()\n","treino = scaler.fit_transform(treino)\n","treino"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mOuUW3zAk5gG","executionInfo":{"status":"ok","timestamp":1649042316886,"user_tz":180,"elapsed":250,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"8aa6ac6a-e9a2-44b3-a6a8-6edf69ba39c9"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[3.30298164e-04, 9.44785459e-04, 0.00000000e+00, 1.34908021e-04,\n","        5.43577158e-01],\n","       [7.42148227e-04, 2.98909923e-03, 1.88269054e-03, 3.39307537e-03,\n","        2.77885876e-01],\n","       [4.71386886e-03, 4.78092896e-03, 5.42828241e-03, 3.83867225e-03,\n","        2.22151352e-01],\n","       ...,\n","       [7.92197108e-01, 8.11970141e-01, 7.90196475e-01, 8.15799920e-01,\n","        2.54669035e-02],\n","       [8.18777193e-01, 8.21510648e-01, 8.20249255e-01, 8.10219301e-01,\n","        1.70461017e-02],\n","       [8.19874096e-01, 8.19172449e-01, 8.12332341e-01, 8.09012935e-01,\n","        1.79972283e-02]])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["X_train = []\n","y_train = []\n"],"metadata":{"id":"fojGYx83lNmT","executionInfo":{"status":"ok","timestamp":1649042470463,"user_tz":180,"elapsed":243,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["treino.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IvVQ946omIUN","executionInfo":{"status":"ok","timestamp":1649042558579,"user_tz":180,"elapsed":228,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"18722fdc-643c-4b32-c2c0-b4417048c1f8"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3617"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#A predição sera feita em intervalos de 60 dias\n","for i in range(60, treino.shape[0]):\n","  X_train.append(treino[i-60:i])#pega os valores em grupos de 60 0:60, 1:61, 2:62 ...\n","  y_train.append(treino[i, 0])#pega o valor do 60° dia o 0 representa a primeira coluna onde esta o valor a ser predito"],"metadata":{"id":"exVlUzQ-lzLg","executionInfo":{"status":"ok","timestamp":1649042831047,"user_tz":180,"elapsed":254,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["X_train, y_train = np.array(X_train), np.array(y_train)"],"metadata":{"id":"A0GwakyEnOmP","executionInfo":{"status":"ok","timestamp":1649043034530,"user_tz":180,"elapsed":284,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["X_train.shape, y_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dSDyM58En82a","executionInfo":{"status":"ok","timestamp":1649043086597,"user_tz":180,"elapsed":227,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"0c865add-ff9c-48ed-ac27-8ff012778d47"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((3557, 60, 5), (3557,))"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["## Contruindo o Modelo"],"metadata":{"id":"8YUB_yWSoTWz"}},{"cell_type":"code","source":["from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, LSTM, Dropout"],"metadata":{"id":"0-oRIIzloVsr","executionInfo":{"status":"ok","timestamp":1649043190541,"user_tz":180,"elapsed":224,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["model = Sequential(name='LSTM')\n","#return sequences serve para indicar que vai continuar passando a informçãoes para a próxima camada\n","model.add(LSTM(units = 100, activation='relu', return_sequences=True, input_shape=(X_train.shape[1], 5)))#units = 50\n","model.add(Dropout(.2))\n","\n","#imput shape só é necessário na primera camada por que é ela quem recebe as entradas\n","model.add(LSTM(units = 120, activation='relu', return_sequences=True))#units = 60\n","model.add(Dropout(.3))\n","\n","model.add(LSTM(units = 160, activation='relu', return_sequences=True))#units = 80\n","model.add(Dropout(.4))\n","\n","#por ser a camada de saída não se usa o return sequances\n","model.add(LSTM(units = 240, activation='relu'))#units = 120\n","model.add(Dropout(.5))\n","\n","model.add(Dense(units = 1))\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0oZGY4bQoi-7","executionInfo":{"status":"ok","timestamp":1649045632361,"user_tz":180,"elapsed":624,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"185946fd-9a9a-4e92-ebcb-da610c810b28"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"LSTM\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," lstm_12 (LSTM)              (None, 60, 100)           42400     \n","                                                                 \n"," dropout_12 (Dropout)        (None, 60, 100)           0         \n","                                                                 \n"," lstm_13 (LSTM)              (None, 60, 120)           106080    \n","                                                                 \n"," dropout_13 (Dropout)        (None, 60, 120)           0         \n","                                                                 \n"," lstm_14 (LSTM)              (None, 60, 160)           179840    \n","                                                                 \n"," dropout_14 (Dropout)        (None, 60, 160)           0         \n","                                                                 \n"," lstm_15 (LSTM)              (None, 240)               384960    \n","                                                                 \n"," dropout_15 (Dropout)        (None, 240)               0         \n","                                                                 \n"," dense_3 (Dense)             (None, 1)                 241       \n","                                                                 \n","=================================================================\n","Total params: 713,521\n","Trainable params: 713,521\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(optimizer='adam',loss='mean_squared_error')"],"metadata":{"id":"J07jYJmUq9m9","executionInfo":{"status":"ok","timestamp":1649045636328,"user_tz":180,"elapsed":313,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["model.fit(X_train,y_train,epochs=20,batch_size=32)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CdJnvveMrVy9","executionInfo":{"status":"ok","timestamp":1649046689166,"user_tz":180,"elapsed":1047137,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"8ece91c0-6337-438c-d1da-2c615e1d2380"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","112/112 [==============================] - 59s 480ms/step - loss: 0.0187\n","Epoch 2/20\n","112/112 [==============================] - 60s 535ms/step - loss: 0.0032\n","Epoch 3/20\n","112/112 [==============================] - 57s 505ms/step - loss: 0.0030\n","Epoch 4/20\n","112/112 [==============================] - 51s 452ms/step - loss: 0.0030\n","Epoch 5/20\n","112/112 [==============================] - 51s 454ms/step - loss: 0.0026\n","Epoch 6/20\n","112/112 [==============================] - 51s 455ms/step - loss: 0.0021\n","Epoch 7/20\n","112/112 [==============================] - 50s 449ms/step - loss: 0.0022\n","Epoch 8/20\n","112/112 [==============================] - 50s 448ms/step - loss: 0.0023\n","Epoch 9/20\n","112/112 [==============================] - 50s 451ms/step - loss: 0.0020\n","Epoch 10/20\n","112/112 [==============================] - 50s 450ms/step - loss: 0.0019\n","Epoch 11/20\n","112/112 [==============================] - 51s 454ms/step - loss: 0.0018\n","Epoch 12/20\n","112/112 [==============================] - 51s 456ms/step - loss: 0.0017\n","Epoch 13/20\n","112/112 [==============================] - 50s 447ms/step - loss: 0.0017\n","Epoch 14/20\n","112/112 [==============================] - 49s 440ms/step - loss: 0.0017\n","Epoch 15/20\n","112/112 [==============================] - 50s 443ms/step - loss: 0.0018\n","Epoch 16/20\n","112/112 [==============================] - 50s 449ms/step - loss: 0.0016\n","Epoch 17/20\n","112/112 [==============================] - 50s 444ms/step - loss: 0.0014\n","Epoch 18/20\n","112/112 [==============================] - 51s 451ms/step - loss: 0.0014\n","Epoch 19/20\n","112/112 [==============================] - 50s 445ms/step - loss: 0.0013\n","Epoch 20/20\n","112/112 [==============================] - 51s 452ms/step - loss: 0.0013\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7ff58c770b10>"]},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["# Preparação do dataset de teste"],"metadata":{"id":"zisPCMFAsmfx"}},{"cell_type":"code","source":["df_teste.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mn5YYQw8srXe","executionInfo":{"status":"ok","timestamp":1649046724177,"user_tz":180,"elapsed":233,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"a23bd44f-a172-4f46-cab1-43b977781bdd"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date         Open         High          Low        Close  \\\n","3617  2019-01-02  1016.570007  1052.319946  1015.710022  1045.849976   \n","3618  2019-01-03  1041.000000  1056.979980  1014.070007  1016.059998   \n","3619  2019-01-04  1032.589966  1070.839966  1027.417969  1070.709961   \n","3620  2019-01-07  1071.500000  1074.000000  1054.760010  1068.390015   \n","3621  2019-01-08  1076.109985  1084.560059  1060.530029  1076.280029   \n","\n","        Adj Close   Volume  \n","3617  1045.849976  1532600  \n","3618  1016.059998  1841100  \n","3619  1070.709961  2093900  \n","3620  1068.390015  1981900  \n","3621  1076.280029  1764900  "],"text/html":["\n","  <div id=\"df-c00f04c3-f183-4475-a99a-86c83291c5ee\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3617</th>\n","      <td>2019-01-02</td>\n","      <td>1016.570007</td>\n","      <td>1052.319946</td>\n","      <td>1015.710022</td>\n","      <td>1045.849976</td>\n","      <td>1045.849976</td>\n","      <td>1532600</td>\n","    </tr>\n","    <tr>\n","      <th>3618</th>\n","      <td>2019-01-03</td>\n","      <td>1041.000000</td>\n","      <td>1056.979980</td>\n","      <td>1014.070007</td>\n","      <td>1016.059998</td>\n","      <td>1016.059998</td>\n","      <td>1841100</td>\n","    </tr>\n","    <tr>\n","      <th>3619</th>\n","      <td>2019-01-04</td>\n","      <td>1032.589966</td>\n","      <td>1070.839966</td>\n","      <td>1027.417969</td>\n","      <td>1070.709961</td>\n","      <td>1070.709961</td>\n","      <td>2093900</td>\n","    </tr>\n","    <tr>\n","      <th>3620</th>\n","      <td>2019-01-07</td>\n","      <td>1071.500000</td>\n","      <td>1074.000000</td>\n","      <td>1054.760010</td>\n","      <td>1068.390015</td>\n","      <td>1068.390015</td>\n","      <td>1981900</td>\n","    </tr>\n","    <tr>\n","      <th>3621</th>\n","      <td>2019-01-08</td>\n","      <td>1076.109985</td>\n","      <td>1084.560059</td>\n","      <td>1060.530029</td>\n","      <td>1076.280029</td>\n","      <td>1076.280029</td>\n","      <td>1764900</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c00f04c3-f183-4475-a99a-86c83291c5ee')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c00f04c3-f183-4475-a99a-86c83291c5ee button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c00f04c3-f183-4475-a99a-86c83291c5ee');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["#pegar últimos 60 dias para que possa predictar o primeiro dia do dataset de teste\n","pre_60_dias =  df_treino.tail(60)"],"metadata":{"id":"4IDYkrPltMWm","executionInfo":{"status":"ok","timestamp":1649046726094,"user_tz":180,"elapsed":244,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["df_app = pre_60_dias.append(df_teste, ignore_index = True).drop(['Date','Adj Close'],axis = 1)"],"metadata":{"id":"eW1qJdMVtk4t","executionInfo":{"status":"ok","timestamp":1649046727117,"user_tz":180,"elapsed":5,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["df_app"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"dg0NV-TPtwYW","executionInfo":{"status":"ok","timestamp":1649046728202,"user_tz":180,"elapsed":16,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"dd622e92-dd3d-4d4e-fd51-97c315ff9161"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Open         High          Low        Close   Volume\n","0    1195.329956  1197.510010  1155.576050  1168.189941  2209500\n","1    1167.500000  1173.500000  1145.119995  1157.349976  1184300\n","2    1150.109985  1168.000000  1127.364014  1148.969971  1932400\n","3    1146.150024  1154.349976  1137.572021  1138.819946  1308700\n","4    1131.079956  1132.170044  1081.130005  1081.219971  2675700\n","..           ...          ...          ...          ...      ...\n","876  2863.209961  2883.250000  2849.679932  2865.000000  1433900\n","877  2857.399902  2869.610107  2843.360107  2852.889893  1052300\n","878  2848.969971  2852.889893  2792.379883  2792.989990  1475800\n","879  2800.199951  2819.000000  2775.939941  2814.000000  1173600\n","880  2800.199951  2818.375000  2775.939941  2814.000000  1174001\n","\n","[881 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-4b8d1cf5-e1e7-4c94-bb9a-3bfc26907b81\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1195.329956</td>\n","      <td>1197.510010</td>\n","      <td>1155.576050</td>\n","      <td>1168.189941</td>\n","      <td>2209500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1167.500000</td>\n","      <td>1173.500000</td>\n","      <td>1145.119995</td>\n","      <td>1157.349976</td>\n","      <td>1184300</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1150.109985</td>\n","      <td>1168.000000</td>\n","      <td>1127.364014</td>\n","      <td>1148.969971</td>\n","      <td>1932400</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1146.150024</td>\n","      <td>1154.349976</td>\n","      <td>1137.572021</td>\n","      <td>1138.819946</td>\n","      <td>1308700</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1131.079956</td>\n","      <td>1132.170044</td>\n","      <td>1081.130005</td>\n","      <td>1081.219971</td>\n","      <td>2675700</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>876</th>\n","      <td>2863.209961</td>\n","      <td>2883.250000</td>\n","      <td>2849.679932</td>\n","      <td>2865.000000</td>\n","      <td>1433900</td>\n","    </tr>\n","    <tr>\n","      <th>877</th>\n","      <td>2857.399902</td>\n","      <td>2869.610107</td>\n","      <td>2843.360107</td>\n","      <td>2852.889893</td>\n","      <td>1052300</td>\n","    </tr>\n","    <tr>\n","      <th>878</th>\n","      <td>2848.969971</td>\n","      <td>2852.889893</td>\n","      <td>2792.379883</td>\n","      <td>2792.989990</td>\n","      <td>1475800</td>\n","    </tr>\n","    <tr>\n","      <th>879</th>\n","      <td>2800.199951</td>\n","      <td>2819.000000</td>\n","      <td>2775.939941</td>\n","      <td>2814.000000</td>\n","      <td>1173600</td>\n","    </tr>\n","    <tr>\n","      <th>880</th>\n","      <td>2800.199951</td>\n","      <td>2818.375000</td>\n","      <td>2775.939941</td>\n","      <td>2814.000000</td>\n","      <td>1174001</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>881 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b8d1cf5-e1e7-4c94-bb9a-3bfc26907b81')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4b8d1cf5-e1e7-4c94-bb9a-3bfc26907b81 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4b8d1cf5-e1e7-4c94-bb9a-3bfc26907b81');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["inputs = scaler.transform(df_app)\n","inputs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D9wMglQitxev","executionInfo":{"status":"ok","timestamp":1649046731181,"user_tz":180,"elapsed":4,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"fb257953-06d1-4ef0-e59d-46ae6d4c03d1"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.93805611, 0.93755773, 0.92220906, 0.91781776, 0.02667489],\n","       [0.91527437, 0.91792904, 0.91350452, 0.90892169, 0.0142533 ],\n","       [0.90103881, 0.91343268, 0.89872289, 0.90204445, 0.02331748],\n","       ...,\n","       [2.29173431, 2.29086576, 2.28482785, 2.25124777, 0.01778519],\n","       [2.25181092, 2.26316006, 2.2711418 , 2.26849013, 0.01412366],\n","       [2.25181092, 2.26264911, 2.2711418 , 2.26849013, 0.01412852]])"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["X_test = []\n","y_test = []\n","\n","for i in range(60, inputs.shape[0]):\n","  X_test.append(inputs[i-60:i])\n","  y_test.append(inputs[i, 0])"],"metadata":{"id":"X8bSo6Dkuw50","executionInfo":{"status":"ok","timestamp":1649046732322,"user_tz":180,"elapsed":3,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":68,"outputs":[]},{"cell_type":"code","source":["X_test, y_test = np.array(X_test), np.array(y_test)\n","X_test.shape, y_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5fDQ-BIQuxEW","executionInfo":{"status":"ok","timestamp":1649046735497,"user_tz":180,"elapsed":238,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"a48f59f4-57c9-4668-d39f-2988fb3de9b5"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((821, 60, 5), (821,))"]},"metadata":{},"execution_count":69}]},{"cell_type":"markdown","source":["## Teste do modelo"],"metadata":{"id":"Swdnmyuasf31"}},{"cell_type":"code","source":["y_pred = model.predict(X_test)\n","y_pred[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C_zqSBTZtLIx","executionInfo":{"status":"ok","timestamp":1649046747244,"user_tz":180,"elapsed":5386,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"93d70ea1-1320-4eb9-864d-822547bcbf6c"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.80511045],\n","       [0.80316234],\n","       [0.8016933 ],\n","       [0.80072844],\n","       [0.80034304],\n","       [0.80059934],\n","       [0.8015138 ],\n","       [0.8029895 ],\n","       [0.8048452 ],\n","       [0.806851  ]], dtype=float32)"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["#após escalar os números para entre 0 e 1 precisamos voltar para seus valores normais usando os valores de scaler.scale_ \n","scaler.scale_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QhklXXFwsiDD","executionInfo":{"status":"ok","timestamp":1649046751649,"user_tz":180,"elapsed":304,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"3cadb658-8e2c-42c4-8d3c-975f658c1a9e"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([8.18605127e-04, 8.17521128e-04, 8.32487534e-04, 8.20673293e-04,\n","       1.21162615e-08])"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["scale = 1/scaler.scale_[0]\n","scale"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HL4omYtuwaCK","executionInfo":{"status":"ok","timestamp":1649046753579,"user_tz":180,"elapsed":5,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"f4542b1c-3927-412a-f2bd-dddfbaaf5e46"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1221.590199"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["#Assim os valores voltam para seus valores originais\n","y_pred = y_pred * scale\n","y_test = y_test * scale"],"metadata":{"id":"-Vfh1yoGwh5D","executionInfo":{"status":"ok","timestamp":1649046755310,"user_tz":180,"elapsed":240,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}}},"execution_count":73,"outputs":[]},{"cell_type":"code","source":["y_pred[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZaSBx83nwy2I","executionInfo":{"status":"ok","timestamp":1649046762220,"user_tz":180,"elapsed":251,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"27e95898-30bc-4b42-d88a-3629863b64bf"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[983.5151 ],\n","       [981.13525],\n","       [979.3407 ],\n","       [978.16205],\n","       [977.6912 ],\n","       [978.00433],\n","       [979.1214 ],\n","       [980.9241 ],\n","       [983.19104],\n","       [985.6413 ]], dtype=float32)"]},"metadata":{},"execution_count":74}]},{"cell_type":"markdown","source":["# Visualização"],"metadata":{"id":"yJbtX8EUw7HB"}},{"cell_type":"code","source":["#Plotagem dos resultados\n","plt.figure(figsize=(14,5))\n","plt.plot(y_test,color=\"red\",label='Valores reais das ações')\n","plt.plot(y_pred,color='blue',label=\"Valores previstos\")\n","plt.title(\"Predição de ações do Google\")\n","plt.xlabel('tempo')\n","plt.ylabel('preço das ações')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"tNEHg76hw0XW","executionInfo":{"status":"ok","timestamp":1649045591430,"user_tz":180,"elapsed":871,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"e1ba07a1-700e-41b8-bae4-434eafc6144f"},"execution_count":57,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1008x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Plotagem dos resultados\n","plt.figure(figsize=(14,5))\n","plt.plot(y_test,color=\"red\",label='Valores reais das ações')\n","plt.plot(y_pred,color='blue',label=\"Valores previstos\")\n","plt.title(\"Predição de ações do Google\")\n","plt.xlabel('tempo')\n","plt.ylabel('preço das ações')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"Keo225qLxs_n","executionInfo":{"status":"ok","timestamp":1649046769062,"user_tz":180,"elapsed":417,"user":{"displayName":"Marcelo","userId":"16821328343641820731"}},"outputId":"e2a9e602-2d8b-4373-9725-f11693491e94"},"execution_count":75,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1008x360 with 1 Axes>"],"image/png":"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ADo45yKBZkAXEWkFPAuMd87VBf4E/uod/1fgT2/7eO84RKQhcAPQCOgCvCwiEVltlAVIJhzsd2WMMcYYU3CELUhy6rD3toj3ckAHYJq3fSLQw1vv7r3H299R9MmzOzDZOXfCObcBWAe0DFe7w6l9+/bMmTMnybYXX3yRoUOHpnpOu3bt8s18T9OnT2fs2LFZOjcmJoZp06alf2A2WrNmDW3btuWaa65h1KhROXpvY4wxxhiTd4V1TJKX8VkG1AVeAuKA/c65eO+QrUB1b706sAXAORcvIgeACt72xUGXDT4nX+nfvz+TJ0/m6qsDPQYnT57Mc889l233SEhIICIiy4m20+Lj4ylcOHM/j27dutGtW7czvndOufjii1mwYEFuN8MYY4wxxuQxYS0B7pxLcM41A2qg2Z+Lw3k/EbldRJaKyNLdu3eH81ZZ0rt3b2bNmsXJkycB2LhxI9u3b6dNmzYMHTqUqKgoGjVqxMiRI0Oe/+GHH9KkSRMaN27MQw89dHp7yZIlGTFiBJGRkSxatIj333+fli1b0qxZM+644w4SEhJISEggJiaGxo0b06RJE8aPH5/i+jExMQwZMoTo6GgefPBB4uLi6NKlCy1atKBNmzasWbMGgBkzZhAdHU3z5s3p1KkTO3fuBOCdd95h2LBhAEydOpXGjRsTGRnJlVdemeJezjmGDRtG/fr16dSpE7t27Tq9b/To0Vx66aU0btyY22+/HeccAP/6179o2LAhTZs25YYbbkhxzY0bN9KmTRsuueQSLrnkEhYuXHh637PPPnu6Pf73O3fuXJo3b06TJk0YPHgwJ06cAGDZsmW0bduWFi1acPXVV7Njx44M3d8YY4wxJk/55RfYti23W5E/Oedy5AU8ATwA7AEKe9suA+Z463OAy7z1wt5xAjwCPBJ0ndPHpfVq0aKFS27VqlUptuW0rl27us8++8w559wzzzzjRowY4Zxzbu/evc455+Lj413btm3dihUrnHPOtW3b1i1ZssRt27bN1axZ0+3atcudOnXKtW/f3n366afOOecA99FHHznn9DNee+217uTJk84554YOHeomTpzoli5d6jp16nS6HX/++WeKtg0cONB17drVxcfHO+ec69Chg1u7dq1zzrnFixe79u3bO+ec27dvn0tMTHTOOffGG2+4++67zznn3Ntvv+3+9re/Oeeca9y4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SWfEgqQcVL58eVq2bMns2bMBzSL17dsXEeHpp59m6dKlrFy5kgULFpwODHzbt2/noYceYt68ecTGxrJkyRI+++wzAI4cOUJ0dDQrVqygQoUKfPTRR/zvf/8jNjaWiIgIJk2aRGxsLNu2beOXX37h559/ZtCgQSHbuHHjRn788UdmzZrFkCFDOH78OADLly9n2rRpLFiwgKeffpoOHTrw448/Mn/+fB544AGOHDlCv379mDJlCgA7duxgx44dREUlncB49OjRzJkzhxUrVjB9+nSKFi3K6NGj6devH7GxsfTr14+RI0fSvHlzVq5cyd///nduueUWAMaNG8dLL71EbGws3333HcX9yd2MMcYYk/eNGaPV4mbMgKef1m5l//wnfPklPPBA9pa/Tk/yTBJosYbMzGPUqZMuv/4aHnssMPksaCW7+vUD76tWDWSPIBAkbdqk45tEtDjERx9BoULw1FM6N9Py5RlvT3IWJJ2Rs3Yy2XvugeyeW7RZM52oOS1+l7vu3bszefJkJkyYAMCUKVN4/fXXiY+PZ8eOHaxatYqmTZuePm/JkiW0a9eOSpUqAXDTTTfx7bff0qNHDyIiIujVqxcAc+fOZdmyZVx66aUAHDt2jMqVK3Pdddexfv167rrrLrp27Urnzp1Dtq9v374UKlSIevXqccEFF7BmzRoArrrqKsp7/xry5ZdfMn36dMaNGwfA8ePH2bx5M3379qVz5848+eSTTJkyhd69e6e4fuvWrYmJiaFv375cf/31Idvw/fff87FX/aVDhw7s3buXgwcP0rp1a+677z5uuukmrr/+emrUqJH2l22MMcaYvOHQIZ2P6KaboEgR7cb22GOaPfENHw7VqsE11+g4oB49wtceP0jq2FEDluXLoU2bzF3joougRg14+WWtSrdyZWCs0tq1Scc3Va2a9NzgTFJw5bzq1bVNEyfq+6lTtVtfVgR3t9uzJ2vXOItZJimHde/enblz57J8+XKOHj1KixYt2LBhA+PGjWPu3LmsXLmSrl27ns7gZESxYsWI8KquOOcYOHAgsbGxxMbG8ttvvzFq1CjKlSvHihUraNeuHa+++iq33npryGtJsn9B8d+X8KuuePf4+OOPT99j8+bNNGjQgOrVq1OhQgVWrlzJRx99RL9+/VJc/9VXX2XMmDFs2bKFFi1asHfv3gx/zocffpg333yT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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[""],"metadata":{"id":"Rln6hN2tycOp"},"execution_count":null,"outputs":[]}]}